tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
}
return(final_df)
}
get_summary_flights <- function(SearchString, summary_type = 'AirCompany'){
##### Define the variables and get the JSON ########
df <- list()
tbf = data.frame()
df <- fromJSON(SearchString)
if(summary_type = 'Connection'){
################## FILTER CONNECTION SUMMARY ######################
previous_data <- read.csv("Final_Project/Datasets/summary_byconnection.csv")
tbf <- df$content$summary$filters$stopFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Qtd_connections = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byconnection.csv")
}else{
################################### SUMMARY AIRLINE FILTERS ##################################################
previous_data <- read.csv("Final_Project/Datasets/summary_byaircompany.csv")
tbf <- df$content$summary$filters$airlineFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
}
return(final_df)
}
get_summary_flights <- function(SearchString, summary_type = 'AirCompany'){
##### Define the variables and get the JSON ########
df <- list()
tbf = data.frame()
df <- fromJSON(SearchString)
if(summary_type = 'Connection'){
################## FILTER CONNECTION SUMMARY ######################
previous_data <- read.csv("Final_Project/Datasets/summary_byconnection.csv")
tbf <- df$content$summary$filters$stopFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Qtd_connections = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byconnection.csv")
}else{
################################### SUMMARY AIRLINE FILTERS ##################################################
previous_data <- read.csv("Final_Project/Datasets/summary_byaircompany.csv")
tbf <- df$content$summary$filters$airlineFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
}
return(final_df)
}
get_summary_flights <- function(SearchString, summary_type = 'AirCompany'){
##### Define the variables and get the JSON ########
df <- list()
tbf = data.frame()
df <- fromJSON(SearchString)
final_df = data.frame()
if(summary_type = 'Connection'){
################## FILTER CONNECTION SUMMARY ######################
previous_data <- read.csv("Final_Project/Datasets/summary_byconnection.csv")
tbf <- df$content$summary$filters$stopFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Qtd_connections = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byconnection.csv")
}else{
################################### SUMMARY AIRLINE FILTERS ##################################################
previous_data <- read.csv("Final_Project/Datasets/summary_byaircompany.csv")
tbf <- df$content$summary$filters$airlineFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
}
return(final_df)
}
get_summary_flights <- function(SearchString, summary_type = 'AirCompany'){
##### Define the variables and get the JSON ########
df <- list()
tbf = data.frame()
df <- fromJSON(SearchString)
final_df = data.frame()
if(summary_type = 'Connection'){
################## FILTER CONNECTION SUMMARY ######################
previous_data <- read.csv("Final_Project/Datasets/summary_byconnection.csv")
tbf <- df$content$summary$filters$stopFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Qtd_connections = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byconnection.csv")
return(final_df)
}else{
################################### SUMMARY AIRLINE FILTERS ##################################################
previous_data <- read.csv("Final_Project/Datasets/summary_byaircompany.csv")
tbf <- df$content$summary$filters$airlineFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
return(final_df)
}
}
get_summary_flights <- function(SearchString, summary_type = 'AirCompany'){
##### Define the variables and get the JSON ########
df <- list()
tbf = data.frame()
df <- fromJSON(SearchString)
final_df = data.frame()
if(summary_type = 'Connection'){
################## FILTER CONNECTION SUMMARY ######################
previous_data <- read.csv("Final_Project/Datasets/summary_byconnection.csv")
tbf <- df$content$summary$filters$stopFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Qtd_connections = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byconnection.csv")
return(final_df)
}else{
################################### SUMMARY AIRLINE FILTERS ##################################################
previous_data <- read.csv("Final_Project/Datasets/summary_byaircompany.csv")
tbf <- df$content$summary$filters$airlineFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
return(final_df)
}
}
rm(list=ls())
SearchString <- "https://www.expedia.com.br/Flight-Search-Paging?c=eaa65020-1416-4dc2-91ab-918b8ccd09ba&is=1&sp=asc&cz=200&cn=0"
summary_type <- 'Connection'
get_summary_flights <- function(SearchString, summary_type = 'AirCompany'){
##### Define the variables and get the JSON ########
df <- list()
tbf = data.frame()
df <- fromJSON(SearchString)
final_df = data.frame()
if(summary_type == 'Connection'){
################## FILTER CONNECTION SUMMARY ######################
previous_data <- read.csv("Final_Project/Datasets/summary_byconnection.csv")
tbf <- df$content$summary$filters$stopFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Qtd_connections = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byconnection.csv")
return(final_df)
}else{
################################### SUMMARY AIRLINE FILTERS ##################################################
previous_data <- read.csv("Final_Project/Datasets/summary_byaircompany.csv")
tbf <- df$content$summary$filters$airlineFilters
tbf$run_time <- Sys.time()
tbf = subset(tbf, select = -c(filterCategory,formattedReferencePrice,formattedPrice))
tbf <- tbf %>% rename( Number_of_Flights = totalCount,
Min_Price = priceAsDouble,
Air_Line_Company = filterName)
tbf <- separate(data = tbf, into = c("search_date", "search_time"), col = run_time , sep = ' ')
tbf$day_period <- with(tbf,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
final_df <- dplyr::union(tbf,previous_data)
write_csv(final_df , "Final_Project/Datasets/summary_byaircompany.csv")
return(final_df)
}
}
tbf <- get_summary_flights(SearchString, summary_type)
View(tbf)
tbf <- get_summary_flights(SearchString)
View(tbf)
rm(list=ls())
SearchString <- "https://www.expedia.com.br/Flight-Search-Paging?c=eaa65020-1416-4dc2-91ab-918b8ccd09ba&is=1&sp=asc&cz=200&cn=0"
df <- fromJSON(SearchString)
View(df)
tbf <- data.frame(matrix(unlist(df$content$legs), nrow=length(df$content$legs), byrow=T))
View(tbf)
View(tbf)
tbf <- dplyr::bind_rows(df$content$legs)
library(purrr)
tbf <- do.call(rbind, lapply(df$content$legs, data.frame, stringsAsFactors=FALSE))
df$content$legs$482dd9ba5c24742a9d7b91dd1434bf70[1]
df$content$legs$'482dd9ba5c24742a9d7b91dd1434bf70'[[1]]
df$content$legs$c3e388d3bfcea68a9d733d6346621928$fareBasisCode
length(df$content$legs)
View(df)
df$content$legs[[1]][['fareBasisCode']]
df$content$legs$c3e388d3bfcea68a9d733d6346621928$fareBasisCode
tbf = data.frame()
tbf$Fare_Code <- df$content$legs[[1]][['fareBasisCode']]
tbf <- 0
tbf$Fare_Code <- df$content$legs[[1]][['fareBasisCode']]
View(tbf)
View(tbf)
tbf <- list()
tbf[['Fare_Code']] <- df$content$legs[[1]][['fareBasisCode']]
View(tbf)
tbf[['Fare_Code']] <- df$content$legs[[1]][['fareBasisCode']]
View(tbf)
View(tbf)
boxes_df <- lapply(boxes, function(x){
t_list <- list()
t_list[['Fare_Code']] <- df$content$legs[[1]][['fareBasisCode']]
return(data.frame(t_list))
})
boxes_df <- lapply(df$content$legs, function(x){
t_list <- list()
t_list[['Fare_Code']] <- df$content$legs[[1]][['fareBasisCode']]
return(data.frame(t_list))
})
View(boxes_df)
data.frame(boxes_df)
View(boxes_df)
boxes_df <- lapply(df$content$legs, function(x){
t_list <- list()
t_list[['Fare_Code']] <- df$content$legs[[1]][['naturalkey']]
df <- rbindlist(data.frame(t_list))
return(df)
})
boxes_df <- lapply(df$content$legs, function(x){
t_list <- list()
t_list[['Fare_Code']] <- df$content$legs[[1]][['naturalkey']]
tbf <- data.frame(t_list)
tdf2 <- rbindlist(tbf)
return(tdf2)
})
t_list <- list()
t_list[['Fare_Code']] <- df$content$legs[[1]][['naturalkey']]
SearchString <- "https://www.expedia.com.br/Flight-Search-Paging?c=eaa65020-1416-4dc2-91ab-918b8ccd09ba&is=1&sp=asc&cz=200&cn=0"
df <- fromJSON(SearchString)
View(df)
SearchString <- "https://www.expedia.com.br/Flight-Search-Paging?c=d2620716-f13c-4bd4-b23c-e3876373402e&is=1&sp=asc&cz=200&cn=0"
df <- fromJSON(SearchString)
t_list <- list()
t_list[['Fare_Code']] <- df$content$legs[[1]][['naturalKey']]
View(t_list)
View(t_list)
View(df)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
flight_df <- lapply(NestedList, function(x){
t_list <- list()
t_list[['Fare_Code']] <- x[[i]][['naturalKey']]
t_list[['Fare_Code']] <- x[[i]][['price']][['exactPrice']]
return(data.frame(t_list))
})
df <- rbindlist(flight_df)
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
flight_df <- lapply(NestedList, function(x){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Fare_Code']] <- NestedList[[i]][['price']][['exactPrice']]
return(data.frame(t_list))
})
df <- rbindlist(flight_df)
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
for (i in 1:length(NestedList)){
flight_df <- lapply(NestedList, function(x){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
return(data.frame(t_list))
})
df <- rbindlist(flight_df)
df_total <- rbind(df_total,df)
}
return(df_total)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
flight_df <- lapply(NestedList, function(x){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
return(data.frame(t_list))
})
df <- rbindlist(flight_df)
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
df <- data.frame(t_list)
df_total <- rbind(df_total,df)
}
return(df_total)
}
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
df <- data.frame(t_list)
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
t_list[['Qtd_Connections']] <- NestedList[[i]][['stops']]
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
t_list[['Currency']] <- NestedList[[i]][['price']][['currencyCode']]
t_list[['AirLineCompany']] <- NestedList[[i]][['carrierSummary']][['airlineName']]
t_list[['Qtd_Connections']] <- NestedList[[i]][['stops']]
t_list[['Departure_Airport_City']] <- NestedList[[i]][['departureLocation']][['airportCity']]
t_list[['Departure_Airport_Code']] <- NestedList[[i]][['departureLocation']][['airportCode']]
t_list[['Arrival_Airport_City']] <- NestedList[[i]][['arrivalLocation']][['airportCity']]
t_list[['Arrival_Airport_Code']] <- NestedList[[i]][['arrivalLocation']][['airportCode']]
t_list[['Departure_Date']] <- NestedList[[i]][['departureTime']][['date']]
t_list[['Departure_Time']] <- NestedList[[i]][['departureTime']][['time']]
t_list[['Arrival_Date']] <- NestedList[[i]][['arrivalTime']][['date']]
t_list[['Arrival_Time']] <- NestedList[[i]][['arrivalTime']][['time']]
t_list[['Duration_Hours']] <- NestedList[[i]][['duration']][['hours']]
t_list[['Duration_Hours']] <- NestedList[[i]][['duration']][['minutes']]
t_list[['run_time']] <- Sys.time()
df <- data.frame(t_list)
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
t_list[['Currency']] <- NestedList[[i]][['price']][['currencyCode']]
t_list[['AirLineCompany']] <- NestedList[[i]][['carrierSummary']][['airlineName']]
t_list[['Qtd_Connections']] <- NestedList[[i]][['stops']]
t_list[['Departure_Airport_City']] <- NestedList[[i]][['departureLocation']][['airportCity']]
t_list[['Departure_Airport_Code']] <- NestedList[[i]][['departureLocation']][['airportCode']]
t_list[['Arrival_Airport_City']] <- NestedList[[i]][['arrivalLocation']][['airportCity']]
t_list[['Arrival_Airport_Code']] <- NestedList[[i]][['arrivalLocation']][['airportCode']]
t_list[['Departure_Date']] <- NestedList[[i]][['departureTime']][['date']]
t_list[['Departure_Time']] <- NestedList[[i]][['departureTime']][['time']]
t_list[['Arrival_Date']] <- NestedList[[i]][['arrivalTime']][['date']]
t_list[['Arrival_Time']] <- NestedList[[i]][['arrivalTime']][['time']]
t_list[['Duration_Hours']] <- NestedList[[i]][['duration']][['hours']]
t_list[['Duration_Hours']] <- NestedList[[i]][['duration']][['minutes']]
t_list[['run_time']] <- Sys.time()
df <- data.frame(t_list)
df <- separate(data = df, into = c("search_date", "search_time"), col = run_time , sep = ' ')
df$day_period <- with(df,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
View(test)
test <- get_my_url(df$content$legs)
View(test)
View(test)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
t_list[['Currency']] <- NestedList[[i]][['price']][['currencyCode']]
t_list[['AirLineCompany']] <- NestedList[[i]][['carrierSummary']][['airlineName']]
t_list[['Qtd_Connections']] <- NestedList[[i]][['stops']]
t_list[['Departure_Airport_City']] <- NestedList[[i]][['departureLocation']][['airportCity']]
t_list[['Departure_Airport_Code']] <- NestedList[[i]][['departureLocation']][['airportCode']]
t_list[['Arrival_Airport_City']] <- NestedList[[i]][['arrivalLocation']][['airportCity']]
t_list[['Arrival_Airport_Code']] <- NestedList[[i]][['arrivalLocation']][['airportCode']]
t_list[['Departure_Date']] <- NestedList[[i]][['departureTime']][['date']]
t_list[['Departure_Time']] <- NestedList[[i]][['departureTime']][['time']]
t_list[['Arrival_Date']] <- NestedList[[i]][['arrivalTime']][['date']]
t_list[['Arrival_Time']] <- NestedList[[i]][['arrivalTime']][['time']]
t_list[['Duration_Hours']] <- NestedList[[i]][['duration']][['hours']]
t_list[['Duration_Minutes']] <- NestedList[[i]][['duration']][['minutes']]
t_list[['run_time']] <- Sys.time()
df <- data.frame(t_list)
df <- separate(data = df, into = c("search_date", "search_time"), col = run_time , sep = ' ')
df$day_period <- with(df,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
get_my_url <- function(NestedList){
df_total = data.frame()
for (i in 1:length(NestedList)){
t_list <- list()
t_list[['Fare_Code']] <- NestedList[[i]][['naturalKey']]
t_list[['Price']] <- NestedList[[i]][['price']][['exactPrice']]
t_list[['Currency']] <- NestedList[[i]][['price']][['currencyCode']]
t_list[['AirLineCompany']] <- NestedList[[i]][['carrierSummary']][['airlineName']]
t_list[['Qtd_Connections']] <- NestedList[[i]][['stops']]
t_list[['Departure_Airport_City']] <- NestedList[[i]][['departureLocation']][['airportCity']]
t_list[['Departure_Airport_Code']] <- NestedList[[i]][['departureLocation']][['airportCode']]
t_list[['Arrival_Airport_City']] <- NestedList[[i]][['arrivalLocation']][['airportCity']]
t_list[['Arrival_Airport_Code']] <- NestedList[[i]][['arrivalLocation']][['airportCode']]
t_list[['Departure_Date']] <- NestedList[[i]][['departureTime']][['date']]
t_list[['Departure_Time']] <- NestedList[[i]][['departureTime']][['time']]
t_list[['Arrival_Date']] <- NestedList[[i]][['arrivalTime']][['date']]
t_list[['Arrival_Time']] <- NestedList[[i]][['arrivalTime']][['time']]
t_list[['Duration_Hours']] <- NestedList[[i]][['duration']][['hours']]
t_list[['Duration_Minutes']] <- NestedList[[i]][['duration']][['minutes']]
t_list[['run_time']] <- Sys.time()
df <- data.frame(t_list)
df <- separate(data = df, into = c("search_date", "search_time"), col = run_time , sep = ' ')
df$search_day_period <- with(df,  ifelse(hour(hms(search_time)) >= 5 & hour(hms(search_time)) <=11, "morning",
ifelse(hour(hms(search_time))>11 & hour(hms(search_time))<=17, "afternoon", "night")))
df_total <- rbind(df_total,df)
}
return(df_total)
}
test <- get_my_url(df$content$legs)
View(test)
